diff --git a/node_modules/@web/rollup-plugin-html/dist/input/getInputData.js b/node_modules/@web/rollup-plugin-html/dist/input/getInputData.js
index 5580f6e..f3c082b 100644
--- a/node_modules/@web/rollup-plugin-html/dist/input/getInputData.js
+++ b/node_modules/@web/rollup-plugin-html/dist/input/getInputData.js
@@ -10,8 +10,8 @@ const glob_1 = __importDefault(require("glob"));
 const utils_1 = require("../utils");
 const normalizeInputOptions_1 = require("./normalizeInputOptions");
 const extractModulesAndAssets_1 = require("./extract/extractModulesAndAssets");
-function resolveGlob(fromGlob, rootDir) {
-    const files = glob_1.default.sync(fromGlob, { cwd: rootDir, absolute: true });
+function resolveGlob(fromGlob, opts) {
+    const files = glob_1.default.sync(fromGlob, { ...opts, absolute: true });
     return (files
         // filter out directories
         .filter(filePath => !fs_1.default.lstatSync(filePath).isDirectory()));
@@ -43,7 +43,7 @@ function createInputData(params) {
 }
 function getInputData(pluginOptions, rollupInput) {
     var _a, _b;
-    const { rootDir = process.cwd(), flattenOutput, extractAssets = true, absolutePathPrefix, } = pluginOptions;
+    const { rootDir = process.cwd(), flattenOutput, extractAssets = true, absolutePathPrefix, exclude } = pluginOptions;
     const allInputs = normalizeInputOptions_1.normalizeInputOptions(pluginOptions, rollupInput);
     const result = [];
     for (const input of allInputs) {
@@ -59,7 +59,7 @@ function getInputData(pluginOptions, rollupInput) {
             result.push(data);
         }
         else if (typeof input.path === 'string') {
-            const filePaths = resolveGlob(input.path, rootDir);
+            const filePaths = resolveGlob(input.path, { cwd: rootDir, ignore: exclude });
             if (filePaths.length === 0) {
                 throw new Error(`Could not find any HTML files for pattern: ${input.path}, resolved relative to ${rootDir}`);
             }
